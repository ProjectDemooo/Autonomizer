[Begin DepRoot:main:image:INPUT]
[main:image:non-scalar:]
[canny:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:dot:scalar:  store float 0.000000e+00, float* %dot, align 4]
[non_max_supp:resultptr:non-scalar:  store i8* %add.ptr, i8** %resultptr, align 8]
[non_max_supp:resultrowptr:non-scalar:  store i8* %add.ptr4, i8** %resultrowptr, align 8]
[non_max_supp:magrowptr:non-scalar:  store i16* %add.ptr17, i16** %magrowptr, align 8]
[non_max_supp:gxrowptr:non-scalar:  store i16* %add.ptr20, i16** %gxrowptr, align 8]
[non_max_supp:gxptr:non-scalar:  store i16* %llvm-tmp34, i16** %gxptr, align 8]
[non_max_supp:xperp:scalar:  store float %div, float* %xperp, align 4]
[non_max_supp:mag1:scalar:  store float %add144, float* %mag1, align 4]
[non_max_supp:gyrowptr:non-scalar:  store i16* %add.ptr23, i16** %gyrowptr, align 8]
[non_max_supp:gyptr:non-scalar:  %llvm-tmp147 = load i16*, i16** %gyptr, align 8]
[non_max_supp:gradx:non-scalar:  store i16* %gradx, i16** %gradx.addr, align 8]
[non_max_supp:grady:non-scalar:  store i16* %grady, i16** %grady.addr, align 8]
[non_max_supp:m00:scalar:  store i16 %llvm-tmp40, i16* %m00, align 2]
[non_max_supp:mag2:scalar:  store float %add86, float* %mag2, align 4]
[non_max_supp:yperp:scalar:  store float %div44, float* %yperp, align 4]
[non_max_supp:gy:scalar:  %llvm-tmp50 = load i16, i16* %gy, align 2]
[non_max_supp:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[non_max_supp:magptr:non-scalar:  store i16* %llvm-tmp33, i16** %magptr, align 8]
[non_max_supp:ncols:scalar:  store i32 %ncols, i32* %ncols.addr, align 4]
[non_max_supp:gx:scalar:  %llvm-tmp51 = load i16, i16* %gx, align 2]
[non_max_supp:result:non-scalar:  store i8* %result, i8** %result.addr, align 8]
[non_max_supp:z1:scalar:  store i16 %llvm-tmp113, i16* %z1, align 2]
[non_max_supp:z2:scalar:  store i16 %llvm-tmp116, i16* %z2, align 2]
[non_max_supp:colcount:scalar:  store i32 1, i32* %colcount, align 4]
[non_max_supp:count:scalar:  %llvm-tmp14 = load i32, i32* %count, align 4]
[non_max_supp:rowcount:scalar:  store i32 1, i32* %rowcount, align 4]
[non_max_supp:nrows:scalar:  store i32 %nrows, i32* %nrows.addr, align 4]
[gaussian_smooth:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[gaussian_smooth:c:scalar:  %llvm-tmp13 = load i32, i32* %c, align 4]
[gaussian_smooth:kernel:non-scalar:  %llvm-tmp29 = load float*, float** %kernel, align 8]
[make_gaussian_kernel:kernel:non-scalar:  store float** %kernel, float*** %kernel.addr, align 8]
[magnitude_x_y:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[main:sigma:scalar:  store float %conv, float* %sigma, align 4]
[gaussian_smooth:cc:scalar:  store i32 %sub, i32* %cc, align 4]
[make_gaussian_kernel:fx:scalar:  store float %conv21, float* %fx, align 4]
[gaussian_smooth:tempim:non-scalar:  store float* %llvm-tmp4, float** %tempim, align 8]
[follow_edges:edgemapptr:non-scalar:  store i8* %edgemapptr, i8** %edgemapptr.addr, align 8]
[follow_edges:edgemagptr:non-scalar:  store i16* %edgemagptr, i16** %edgemagptr.addr, align 8]
[follow_edges:tempmagptr:non-scalar:  store i16* %add.ptr14, i16** %tempmagptr, align 8]
[follow_edges:tempmapptr:non-scalar:  store i8* %add.ptr4, i8** %tempmapptr, align 8]
[derrivative_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[radian_direction:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[main:infilename:non-scalar:  store i8* null, i8** %infilename, align 8]
[main:dirfilename:non-scalar:  store i8* null, i8** %dirfilename, align 8]
[canny:fname:non-scalar:  store i8* %fname, i8** %fname.addr, align 8]
[read_pgm_image:infilename:non-scalar:  store i8* %infilename, i8** %infilename.addr, align 8]
[read_pgm_image:buf:non-scalar:  %arraydecay = getelementptr inbounds [71 x i8], [71 x i8]* %buf, i32 0, i32 0]
[read_pgm_image:fp:non-scalar:  store %struct._IO_FILE* %llvm-tmp1, %struct._IO_FILE** %fp, align 8]
[apply_hysteresis:lowthreshold:scalar:  store i32 %conv112, i32* %lowthreshold, align 4]
[apply_hysteresis:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[magnitude_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[canny:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[magnitude_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:c:scalar:  %llvm-tmp8 = load i32, i32* %c, align 4]
[magnitude_x_y:sq2:scalar:  store i32 %mul20, i32* %sq2, align 4]
[radian_direction:dx:scalar:  %llvm-tmp20 = load double, double* %dx, align 8]
[angle_radians:retval:scalar:  store double 0.000000e+00, double* %retval, align 8]
[radian_direction:dy:scalar:  store double %sub20, double* %dy, align 8]
[radian_direction:dirim:non-scalar:  %llvm-tmp4 = load float*, float** %dirim, align 8]
[magnitude_x_y:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[magnitude_x_y:sq1:scalar:  store i32 %mul13, i32* %sq1, align 4]
[radian_direction:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[gaussian_smooth:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[write_pgm_image:retval:scalar:  %llvm-tmp26 = load i32, i32* %retval, align 4]
[write_pgm_image:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:edge:non-scalar:  %llvm-tmp9 = load i8*, i8** %edge.addr, align 8]
[canny:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[write_pgm_image:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[apply_hysteresis:nms:non-scalar:  store i8* %nms, i8** %nms.addr, align 8]
[apply_hysteresis:c:scalar:  %llvm-tmp11 = load i32, i32* %c, align 4]
[canny:edge:non-scalar:  store i8** %edge, i8*** %edge.addr, align 8]
[apply_hysteresis:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[apply_hysteresis:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[apply_hysteresis:pos:scalar:  %llvm-tmp8 = load i32, i32* %pos, align 4]
[apply_hysteresis:r:scalar:  store i32 %inc12, i32* %r, align 4]
[gaussian_smooth:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[gaussian_smooth:r:scalar:  %llvm-tmp11 = load i32, i32* %r, align 4]
[radian_direction:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[derrivative_x_y:delta_x:non-scalar:  %llvm-tmp32 = load i16**, i16*** %delta_x.addr, align 8]
[apply_hysteresis:numedges:scalar:  store i32 0, i32* %numedges, align 4]
[apply_hysteresis:highcount:scalar:  store i32 %conv96, i32* %highcount, align 4]
[apply_hysteresis:maximum_mag:scalar:  store i16 %conv84, i16* %maximum_mag, align 2]
[apply_hysteresis:hist:non-scalar:  %arrayidx44 = getelementptr inbounds [32768 x i32], [32768 x i32]* %hist, i64 0, i64 %idxprom43]
[apply_hysteresis:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[apply_hysteresis:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[derrivative_x_y:c:scalar:  %llvm-tmp35 = load i32, i32* %c, align 4]
[derrivative_x_y:delta_y:non-scalar:  store i16** %delta_y, i16*** %delta_y.addr, align 8]
[derrivative_x_y:smoothedim:non-scalar:  %llvm-tmp29 = load i16*, i16** %smoothedim.addr, align 8]
[derrivative_x_y:pos:scalar:  %llvm-tmp30 = load i32, i32* %pos, align 4]
[write_pgm_image:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:smoothedim:non-scalar:  store i16** %smoothedim, i16*** %smoothedim.addr, align 8]
[canny:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[derrivative_x_y:r:scalar:  %llvm-tmp46 = load i32, i32* %r, align 4]
[derrivative_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[follow_edges:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[canny:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[magnitude_x_y:magnitude:non-scalar:  store i16** %magnitude, i16*** %magnitude.addr, align 8]
[magnitude_x_y:c:scalar:  %llvm-tmp7 = load i32, i32* %c, align 4]
[magnitude_x_y:pos:scalar:  store i32 0, i32* %pos, align 4]
[apply_hysteresis:highthreshold:scalar:  store i32 %llvm-tmp71, i32* %highthreshold, align 4]
[canny:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:dir_radians:non-scalar:  store float** %dir_radians, float*** %dir_radians.addr, align 8]
[angle_radians:y:scalar:  store double %y, double* %y.addr, align 8]
[angle_radians:x:scalar:  store double %x, double* %x.addr, align 8]
[radian_direction:pos:scalar:  store i32 0, i32* %pos, align 4]
[radian_direction:r:scalar:  store i32 0, i32* %r, align 4]
[gaussian_smooth:rr:scalar:  %llvm-tmp76 = load i32, i32* %rr, align 4]
[magnitude_x_y:r:scalar:  %llvm-tmp5 = load i32, i32* %r, align 4]
[follow_edges:lowval:scalar:  store i16 %lowval, i16* %lowval.addr, align 2]
[main:tlow:scalar:  store float %conv19, float* %tlow, align 4]
[read_pgm_image:retval:scalar:  store i32 0, i32* %retval, align 4]
[read_pgm_image:cols:non-scalar:  store i32* %cols, i32** %cols.addr, align 8]
[read_pgm_image:image:non-scalar:  store i8** %image, i8*** %image.addr, align 8]
[read_pgm_image:rows:non-scalar:  store i32* %rows, i32** %rows.addr, align 8]
[make_gaussian_kernel:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[make_gaussian_kernel:x:scalar:  store float %conv8, float* %x, align 4]
[make_gaussian_kernel:i:scalar:  %llvm-tmp10 = load i32, i32* %i, align 4]
[gaussian_smooth:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:windowsize:non-scalar:  store i32* %windowsize, i32** %windowsize.addr, align 8]
[make_gaussian_kernel:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[End DepRoot:main:image:INPUT]

[Begin DepRoot:main:sigma:NON_INPUT]
[main:sigma:scalar:]
[gaussian_smooth:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:dot:scalar:  store float 0.000000e+00, float* %dot, align 4]
[non_max_supp:resultptr:non-scalar:  store i8* %add.ptr, i8** %resultptr, align 8]
[non_max_supp:resultrowptr:non-scalar:  store i8* %add.ptr4, i8** %resultrowptr, align 8]
[non_max_supp:magrowptr:non-scalar:  store i16* %add.ptr17, i16** %magrowptr, align 8]
[non_max_supp:gxrowptr:non-scalar:  store i16* %add.ptr20, i16** %gxrowptr, align 8]
[non_max_supp:gxptr:non-scalar:  store i16* %llvm-tmp34, i16** %gxptr, align 8]
[non_max_supp:xperp:scalar:  store float %div, float* %xperp, align 4]
[non_max_supp:mag1:scalar:  store float %add144, float* %mag1, align 4]
[non_max_supp:gyrowptr:non-scalar:  store i16* %add.ptr23, i16** %gyrowptr, align 8]
[non_max_supp:gyptr:non-scalar:  %llvm-tmp147 = load i16*, i16** %gyptr, align 8]
[non_max_supp:gradx:non-scalar:  store i16* %gradx, i16** %gradx.addr, align 8]
[non_max_supp:grady:non-scalar:  store i16* %grady, i16** %grady.addr, align 8]
[non_max_supp:m00:scalar:  store i16 %llvm-tmp40, i16* %m00, align 2]
[non_max_supp:mag2:scalar:  store float %add86, float* %mag2, align 4]
[non_max_supp:yperp:scalar:  store float %div44, float* %yperp, align 4]
[non_max_supp:gy:scalar:  %llvm-tmp50 = load i16, i16* %gy, align 2]
[non_max_supp:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[non_max_supp:magptr:non-scalar:  store i16* %llvm-tmp33, i16** %magptr, align 8]
[non_max_supp:ncols:scalar:  store i32 %ncols, i32* %ncols.addr, align 4]
[non_max_supp:gx:scalar:  %llvm-tmp51 = load i16, i16* %gx, align 2]
[non_max_supp:result:non-scalar:  store i8* %result, i8** %result.addr, align 8]
[non_max_supp:z1:scalar:  store i16 %llvm-tmp113, i16* %z1, align 2]
[non_max_supp:z2:scalar:  store i16 %llvm-tmp116, i16* %z2, align 2]
[non_max_supp:colcount:scalar:  store i32 1, i32* %colcount, align 4]
[non_max_supp:count:scalar:  %llvm-tmp14 = load i32, i32* %count, align 4]
[non_max_supp:rowcount:scalar:  store i32 1, i32* %rowcount, align 4]
[non_max_supp:nrows:scalar:  store i32 %nrows, i32* %nrows.addr, align 4]
[gaussian_smooth:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[gaussian_smooth:c:scalar:  %llvm-tmp13 = load i32, i32* %c, align 4]
[canny:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:kernel:non-scalar:  %llvm-tmp29 = load float*, float** %kernel, align 8]
[make_gaussian_kernel:kernel:non-scalar:  store float** %kernel, float*** %kernel.addr, align 8]
[magnitude_x_y:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[magnitude_x_y:sq2:scalar:  store i32 %mul20, i32* %sq2, align 4]
[derrivative_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[radian_direction:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[main:infilename:non-scalar:  store i8* null, i8** %infilename, align 8]
[main:dirfilename:non-scalar:  store i8* null, i8** %dirfilename, align 8]
[canny:fname:non-scalar:  store i8* %fname, i8** %fname.addr, align 8]
[read_pgm_image:infilename:non-scalar:  store i8* %infilename, i8** %infilename.addr, align 8]
[read_pgm_image:buf:non-scalar:  %arraydecay = getelementptr inbounds [71 x i8], [71 x i8]* %buf, i32 0, i32 0]
[read_pgm_image:fp:non-scalar:  store %struct._IO_FILE* %llvm-tmp1, %struct._IO_FILE** %fp, align 8]
[apply_hysteresis:lowthreshold:scalar:  store i32 %conv112, i32* %lowthreshold, align 4]
[follow_edges:tempmapptr:non-scalar:  store i8* %add.ptr4, i8** %tempmapptr, align 8]
[follow_edges:edgemapptr:non-scalar:  store i8* %edgemapptr, i8** %edgemapptr.addr, align 8]
[follow_edges:edgemagptr:non-scalar:  store i16* %edgemagptr, i16** %edgemagptr.addr, align 8]
[follow_edges:tempmagptr:non-scalar:  store i16* %add.ptr14, i16** %tempmagptr, align 8]
[gaussian_smooth:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[apply_hysteresis:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[radian_direction:c:scalar:  %llvm-tmp8 = load i32, i32* %c, align 4]
[radian_direction:dx:scalar:  %llvm-tmp20 = load double, double* %dx, align 8]
[angle_radians:retval:scalar:  store double 0.000000e+00, double* %retval, align 8]
[radian_direction:dy:scalar:  store double %sub20, double* %dy, align 8]
[radian_direction:dirim:non-scalar:  %llvm-tmp4 = load float*, float** %dirim, align 8]
[magnitude_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[magnitude_x_y:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[magnitude_x_y:sq1:scalar:  store i32 %mul13, i32* %sq1, align 4]
[radian_direction:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[gaussian_smooth:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[magnitude_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[canny:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[write_pgm_image:retval:scalar:  %llvm-tmp26 = load i32, i32* %retval, align 4]
[write_pgm_image:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:edge:non-scalar:  %llvm-tmp9 = load i8*, i8** %edge.addr, align 8]
[canny:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[write_pgm_image:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[apply_hysteresis:nms:non-scalar:  store i8* %nms, i8** %nms.addr, align 8]
[apply_hysteresis:c:scalar:  %llvm-tmp11 = load i32, i32* %c, align 4]
[canny:edge:non-scalar:  store i8** %edge, i8*** %edge.addr, align 8]
[apply_hysteresis:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[apply_hysteresis:pos:scalar:  %llvm-tmp8 = load i32, i32* %pos, align 4]
[apply_hysteresis:r:scalar:  store i32 %inc12, i32* %r, align 4]
[apply_hysteresis:numedges:scalar:  store i32 0, i32* %numedges, align 4]
[apply_hysteresis:highcount:scalar:  store i32 %conv96, i32* %highcount, align 4]
[apply_hysteresis:maximum_mag:scalar:  store i16 %conv84, i16* %maximum_mag, align 2]
[apply_hysteresis:hist:non-scalar:  %arrayidx44 = getelementptr inbounds [32768 x i32], [32768 x i32]* %hist, i64 0, i64 %idxprom43]
[apply_hysteresis:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[apply_hysteresis:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[derrivative_x_y:c:scalar:  %llvm-tmp35 = load i32, i32* %c, align 4]
[derrivative_x_y:delta_x:non-scalar:  %llvm-tmp32 = load i16**, i16*** %delta_x.addr, align 8]
[follow_edges:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[radian_direction:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[derrivative_x_y:delta_y:non-scalar:  store i16** %delta_y, i16*** %delta_y.addr, align 8]
[derrivative_x_y:smoothedim:non-scalar:  %llvm-tmp29 = load i16*, i16** %smoothedim.addr, align 8]
[derrivative_x_y:pos:scalar:  %llvm-tmp30 = load i32, i32* %pos, align 4]
[write_pgm_image:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:smoothedim:non-scalar:  store i16** %smoothedim, i16*** %smoothedim.addr, align 8]
[canny:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[derrivative_x_y:r:scalar:  %llvm-tmp46 = load i32, i32* %r, align 4]
[derrivative_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:highthreshold:scalar:  store i32 %llvm-tmp71, i32* %highthreshold, align 4]
[canny:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[magnitude_x_y:magnitude:non-scalar:  store i16** %magnitude, i16*** %magnitude.addr, align 8]
[magnitude_x_y:c:scalar:  %llvm-tmp7 = load i32, i32* %c, align 4]
[magnitude_x_y:pos:scalar:  store i32 0, i32* %pos, align 4]
[canny:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:dir_radians:non-scalar:  store float** %dir_radians, float*** %dir_radians.addr, align 8]
[angle_radians:y:scalar:  store double %y, double* %y.addr, align 8]
[angle_radians:x:scalar:  store double %x, double* %x.addr, align 8]
[radian_direction:pos:scalar:  store i32 0, i32* %pos, align 4]
[radian_direction:r:scalar:  store i32 0, i32* %r, align 4]
[gaussian_smooth:rr:scalar:  %llvm-tmp76 = load i32, i32* %rr, align 4]
[gaussian_smooth:r:scalar:  %llvm-tmp11 = load i32, i32* %r, align 4]
[follow_edges:lowval:scalar:  store i16 %lowval, i16* %lowval.addr, align 2]
[main:tlow:scalar:]
[read_pgm_image:retval:scalar:  store i32 0, i32* %retval, align 4]
[read_pgm_image:cols:non-scalar:  store i32* %cols, i32** %cols.addr, align 8]
[read_pgm_image:image:non-scalar:  store i8** %image, i8*** %image.addr, align 8]
[read_pgm_image:rows:non-scalar:  store i32* %rows, i32** %rows.addr, align 8]
[magnitude_x_y:r:scalar:  %llvm-tmp5 = load i32, i32* %r, align 4]
[gaussian_smooth:tempim:non-scalar:  store float* %llvm-tmp4, float** %tempim, align 8]
[make_gaussian_kernel:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[make_gaussian_kernel:fx:scalar:  store float %conv21, float* %fx, align 4]
[make_gaussian_kernel:i:scalar:  %llvm-tmp10 = load i32, i32* %i, align 4]
[gaussian_smooth:cc:scalar:  store i32 %sub, i32* %cc, align 4]
[make_gaussian_kernel:x:scalar:  store float %conv8, float* %x, align 4]
[gaussian_smooth:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:windowsize:non-scalar:  store i32* %windowsize, i32** %windowsize.addr, align 8]
[make_gaussian_kernel:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[End DepRoot:main:sigma:NON_INPUT]

[Begin DepRoot:main:tlow:NON_INPUT]
[main:tlow:scalar:]
[apply_hysteresis:lowthreshold:scalar:  store i32 %conv112, i32* %lowthreshold, align 4]
[follow_edges:tempmapptr:non-scalar:  store i8* %add.ptr4, i8** %tempmapptr, align 8]
[follow_edges:edgemapptr:non-scalar:  store i8* %edgemapptr, i8** %edgemapptr.addr, align 8]
[follow_edges:edgemagptr:non-scalar:  store i16* %edgemagptr, i16** %edgemagptr.addr, align 8]
[follow_edges:tempmagptr:non-scalar:  store i16* %add.ptr14, i16** %tempmagptr, align 8]
[derrivative_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[radian_direction:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[main:infilename:non-scalar:  store i8* null, i8** %infilename, align 8]
[main:dirfilename:non-scalar:  store i8* null, i8** %dirfilename, align 8]
[canny:fname:non-scalar:  store i8* %fname, i8** %fname.addr, align 8]
[read_pgm_image:infilename:non-scalar:  store i8* %infilename, i8** %infilename.addr, align 8]
[main:sigma:scalar:]
[gaussian_smooth:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:dot:scalar:  store float 0.000000e+00, float* %dot, align 4]
[non_max_supp:resultptr:non-scalar:  store i8* %add.ptr, i8** %resultptr, align 8]
[non_max_supp:resultrowptr:non-scalar:  store i8* %add.ptr4, i8** %resultrowptr, align 8]
[non_max_supp:magrowptr:non-scalar:  store i16* %add.ptr17, i16** %magrowptr, align 8]
[non_max_supp:gxrowptr:non-scalar:  store i16* %add.ptr20, i16** %gxrowptr, align 8]
[non_max_supp:gxptr:non-scalar:  store i16* %llvm-tmp34, i16** %gxptr, align 8]
[non_max_supp:xperp:scalar:  store float %div, float* %xperp, align 4]
[non_max_supp:mag1:scalar:  store float %add144, float* %mag1, align 4]
[non_max_supp:gyrowptr:non-scalar:  store i16* %add.ptr23, i16** %gyrowptr, align 8]
[non_max_supp:gyptr:non-scalar:  %llvm-tmp147 = load i16*, i16** %gyptr, align 8]
[non_max_supp:gradx:non-scalar:  store i16* %gradx, i16** %gradx.addr, align 8]
[non_max_supp:grady:non-scalar:  store i16* %grady, i16** %grady.addr, align 8]
[non_max_supp:m00:scalar:  store i16 %llvm-tmp40, i16* %m00, align 2]
[non_max_supp:mag2:scalar:  store float %add86, float* %mag2, align 4]
[non_max_supp:yperp:scalar:  store float %div44, float* %yperp, align 4]
[non_max_supp:gy:scalar:  %llvm-tmp50 = load i16, i16* %gy, align 2]
[non_max_supp:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[non_max_supp:magptr:non-scalar:  store i16* %llvm-tmp33, i16** %magptr, align 8]
[non_max_supp:ncols:scalar:  store i32 %ncols, i32* %ncols.addr, align 4]
[non_max_supp:gx:scalar:  %llvm-tmp51 = load i16, i16* %gx, align 2]
[non_max_supp:result:non-scalar:  store i8* %result, i8** %result.addr, align 8]
[non_max_supp:z1:scalar:  store i16 %llvm-tmp113, i16* %z1, align 2]
[non_max_supp:z2:scalar:  store i16 %llvm-tmp116, i16* %z2, align 2]
[non_max_supp:colcount:scalar:  store i32 1, i32* %colcount, align 4]
[non_max_supp:count:scalar:  %llvm-tmp14 = load i32, i32* %count, align 4]
[non_max_supp:rowcount:scalar:  store i32 1, i32* %rowcount, align 4]
[non_max_supp:nrows:scalar:  store i32 %nrows, i32* %nrows.addr, align 4]
[gaussian_smooth:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[gaussian_smooth:c:scalar:  %llvm-tmp13 = load i32, i32* %c, align 4]
[canny:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:kernel:non-scalar:  %llvm-tmp29 = load float*, float** %kernel, align 8]
[make_gaussian_kernel:kernel:non-scalar:  store float** %kernel, float*** %kernel.addr, align 8]
[magnitude_x_y:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[magnitude_x_y:sq2:scalar:  store i32 %mul20, i32* %sq2, align 4]
[gaussian_smooth:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[apply_hysteresis:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[radian_direction:c:scalar:  %llvm-tmp8 = load i32, i32* %c, align 4]
[radian_direction:dx:scalar:  %llvm-tmp20 = load double, double* %dx, align 8]
[angle_radians:retval:scalar:  store double 0.000000e+00, double* %retval, align 8]
[radian_direction:dy:scalar:  store double %sub20, double* %dy, align 8]
[radian_direction:dirim:non-scalar:  %llvm-tmp4 = load float*, float** %dirim, align 8]
[magnitude_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[magnitude_x_y:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[magnitude_x_y:sq1:scalar:  store i32 %mul13, i32* %sq1, align 4]
[radian_direction:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[gaussian_smooth:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[magnitude_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[canny:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[write_pgm_image:retval:scalar:  %llvm-tmp26 = load i32, i32* %retval, align 4]
[write_pgm_image:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:edge:non-scalar:  %llvm-tmp9 = load i8*, i8** %edge.addr, align 8]
[canny:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[write_pgm_image:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[apply_hysteresis:nms:non-scalar:  store i8* %nms, i8** %nms.addr, align 8]
[apply_hysteresis:c:scalar:  %llvm-tmp11 = load i32, i32* %c, align 4]
[canny:edge:non-scalar:  store i8** %edge, i8*** %edge.addr, align 8]
[apply_hysteresis:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[apply_hysteresis:pos:scalar:  %llvm-tmp8 = load i32, i32* %pos, align 4]
[apply_hysteresis:r:scalar:  store i32 %inc12, i32* %r, align 4]
[apply_hysteresis:numedges:scalar:  store i32 0, i32* %numedges, align 4]
[apply_hysteresis:highcount:scalar:  store i32 %conv96, i32* %highcount, align 4]
[apply_hysteresis:maximum_mag:scalar:  store i16 %conv84, i16* %maximum_mag, align 2]
[apply_hysteresis:hist:non-scalar:  %arrayidx44 = getelementptr inbounds [32768 x i32], [32768 x i32]* %hist, i64 0, i64 %idxprom43]
[apply_hysteresis:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[apply_hysteresis:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[derrivative_x_y:c:scalar:  %llvm-tmp35 = load i32, i32* %c, align 4]
[derrivative_x_y:delta_x:non-scalar:  %llvm-tmp32 = load i16**, i16*** %delta_x.addr, align 8]
[follow_edges:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[radian_direction:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[derrivative_x_y:delta_y:non-scalar:  store i16** %delta_y, i16*** %delta_y.addr, align 8]
[derrivative_x_y:smoothedim:non-scalar:  %llvm-tmp29 = load i16*, i16** %smoothedim.addr, align 8]
[derrivative_x_y:pos:scalar:  %llvm-tmp30 = load i32, i32* %pos, align 4]
[write_pgm_image:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:smoothedim:non-scalar:  store i16** %smoothedim, i16*** %smoothedim.addr, align 8]
[canny:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[derrivative_x_y:r:scalar:  %llvm-tmp46 = load i32, i32* %r, align 4]
[derrivative_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:highthreshold:scalar:  store i32 %llvm-tmp71, i32* %highthreshold, align 4]
[canny:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[magnitude_x_y:magnitude:non-scalar:  store i16** %magnitude, i16*** %magnitude.addr, align 8]
[magnitude_x_y:c:scalar:  %llvm-tmp7 = load i32, i32* %c, align 4]
[magnitude_x_y:pos:scalar:  store i32 0, i32* %pos, align 4]
[canny:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:dir_radians:non-scalar:  store float** %dir_radians, float*** %dir_radians.addr, align 8]
[angle_radians:y:scalar:  store double %y, double* %y.addr, align 8]
[angle_radians:x:scalar:  store double %x, double* %x.addr, align 8]
[radian_direction:pos:scalar:  store i32 0, i32* %pos, align 4]
[radian_direction:r:scalar:  store i32 0, i32* %r, align 4]
[gaussian_smooth:rr:scalar:  %llvm-tmp76 = load i32, i32* %rr, align 4]
[gaussian_smooth:r:scalar:  %llvm-tmp11 = load i32, i32* %r, align 4]
[magnitude_x_y:r:scalar:  %llvm-tmp5 = load i32, i32* %r, align 4]
[gaussian_smooth:tempim:non-scalar:  store float* %llvm-tmp4, float** %tempim, align 8]
[make_gaussian_kernel:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[make_gaussian_kernel:fx:scalar:  store float %conv21, float* %fx, align 4]
[make_gaussian_kernel:i:scalar:  %llvm-tmp10 = load i32, i32* %i, align 4]
[gaussian_smooth:cc:scalar:  store i32 %sub, i32* %cc, align 4]
[make_gaussian_kernel:x:scalar:  store float %conv8, float* %x, align 4]
[gaussian_smooth:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:windowsize:non-scalar:  store i32* %windowsize, i32** %windowsize.addr, align 8]
[make_gaussian_kernel:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[read_pgm_image:buf:non-scalar:  %arraydecay = getelementptr inbounds [71 x i8], [71 x i8]* %buf, i32 0, i32 0]
[read_pgm_image:fp:non-scalar:  store %struct._IO_FILE* %llvm-tmp1, %struct._IO_FILE** %fp, align 8]
[read_pgm_image:retval:scalar:  store i32 0, i32* %retval, align 4]
[read_pgm_image:cols:non-scalar:  store i32* %cols, i32** %cols.addr, align 8]
[read_pgm_image:image:non-scalar:  store i8** %image, i8*** %image.addr, align 8]
[read_pgm_image:rows:non-scalar:  store i32* %rows, i32** %rows.addr, align 8]
[follow_edges:lowval:scalar:  store i16 %lowval, i16* %lowval.addr, align 2]
[End DepRoot:main:tlow:NON_INPUT]

[Begin DepRoot:main:thigh:NON_INPUT]
[main:thigh:scalar:]
[apply_hysteresis:highcount:scalar:  store i32 %conv96, i32* %highcount, align 4]
[follow_edges:edgemapptr:non-scalar:  store i8* %edgemapptr, i8** %edgemapptr.addr, align 8]
[follow_edges:edgemagptr:non-scalar:  store i16* %edgemagptr, i16** %edgemagptr.addr, align 8]
[follow_edges:tempmagptr:non-scalar:  store i16* %add.ptr14, i16** %tempmagptr, align 8]
[follow_edges:tempmapptr:non-scalar:  store i8* %add.ptr4, i8** %tempmapptr, align 8]
[derrivative_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[radian_direction:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[main:infilename:non-scalar:  store i8* null, i8** %infilename, align 8]
[main:dirfilename:non-scalar:  store i8* null, i8** %dirfilename, align 8]
[canny:fname:non-scalar:  store i8* %fname, i8** %fname.addr, align 8]
[read_pgm_image:infilename:non-scalar:  store i8* %infilename, i8** %infilename.addr, align 8]
[main:sigma:scalar:]
[gaussian_smooth:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:dot:scalar:  store float 0.000000e+00, float* %dot, align 4]
[non_max_supp:resultptr:non-scalar:  store i8* %add.ptr, i8** %resultptr, align 8]
[non_max_supp:resultrowptr:non-scalar:  store i8* %add.ptr4, i8** %resultrowptr, align 8]
[non_max_supp:magrowptr:non-scalar:  store i16* %add.ptr17, i16** %magrowptr, align 8]
[non_max_supp:gxrowptr:non-scalar:  store i16* %add.ptr20, i16** %gxrowptr, align 8]
[non_max_supp:gxptr:non-scalar:  store i16* %llvm-tmp34, i16** %gxptr, align 8]
[non_max_supp:xperp:scalar:  store float %div, float* %xperp, align 4]
[non_max_supp:mag1:scalar:  store float %add144, float* %mag1, align 4]
[non_max_supp:gyrowptr:non-scalar:  store i16* %add.ptr23, i16** %gyrowptr, align 8]
[non_max_supp:gyptr:non-scalar:  %llvm-tmp147 = load i16*, i16** %gyptr, align 8]
[non_max_supp:gradx:non-scalar:  store i16* %gradx, i16** %gradx.addr, align 8]
[non_max_supp:grady:non-scalar:  store i16* %grady, i16** %grady.addr, align 8]
[non_max_supp:m00:scalar:  store i16 %llvm-tmp40, i16* %m00, align 2]
[non_max_supp:mag2:scalar:  store float %add86, float* %mag2, align 4]
[non_max_supp:yperp:scalar:  store float %div44, float* %yperp, align 4]
[non_max_supp:gy:scalar:  %llvm-tmp50 = load i16, i16* %gy, align 2]
[non_max_supp:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[non_max_supp:magptr:non-scalar:  store i16* %llvm-tmp33, i16** %magptr, align 8]
[non_max_supp:ncols:scalar:  store i32 %ncols, i32* %ncols.addr, align 4]
[non_max_supp:gx:scalar:  %llvm-tmp51 = load i16, i16* %gx, align 2]
[non_max_supp:result:non-scalar:  store i8* %result, i8** %result.addr, align 8]
[non_max_supp:z1:scalar:  store i16 %llvm-tmp113, i16* %z1, align 2]
[non_max_supp:z2:scalar:  store i16 %llvm-tmp116, i16* %z2, align 2]
[non_max_supp:colcount:scalar:  store i32 1, i32* %colcount, align 4]
[non_max_supp:count:scalar:  %llvm-tmp14 = load i32, i32* %count, align 4]
[non_max_supp:rowcount:scalar:  store i32 1, i32* %rowcount, align 4]
[non_max_supp:nrows:scalar:  store i32 %nrows, i32* %nrows.addr, align 4]
[gaussian_smooth:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[gaussian_smooth:c:scalar:  %llvm-tmp13 = load i32, i32* %c, align 4]
[canny:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[gaussian_smooth:kernel:non-scalar:  %llvm-tmp29 = load float*, float** %kernel, align 8]
[make_gaussian_kernel:kernel:non-scalar:  store float** %kernel, float*** %kernel.addr, align 8]
[magnitude_x_y:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[magnitude_x_y:sq2:scalar:  store i32 %mul20, i32* %sq2, align 4]
[gaussian_smooth:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[apply_hysteresis:lowthreshold:scalar:  store i32 %conv112, i32* %lowthreshold, align 4]
[follow_edges:lowval:scalar:  store i16 %lowval, i16* %lowval.addr, align 2]
[apply_hysteresis:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[radian_direction:c:scalar:  %llvm-tmp8 = load i32, i32* %c, align 4]
[radian_direction:dx:scalar:  %llvm-tmp20 = load double, double* %dx, align 8]
[angle_radians:retval:scalar:  store double 0.000000e+00, double* %retval, align 8]
[radian_direction:dy:scalar:  store double %sub20, double* %dy, align 8]
[radian_direction:dirim:non-scalar:  %llvm-tmp4 = load float*, float** %dirim, align 8]
[magnitude_x_y:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[magnitude_x_y:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[magnitude_x_y:sq1:scalar:  store i32 %mul13, i32* %sq1, align 4]
[radian_direction:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8]
[gaussian_smooth:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[magnitude_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[canny:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[write_pgm_image:retval:scalar:  %llvm-tmp26 = load i32, i32* %retval, align 4]
[write_pgm_image:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:edge:non-scalar:  %llvm-tmp9 = load i8*, i8** %edge.addr, align 8]
[canny:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[write_pgm_image:image:non-scalar:  store i8* %image, i8** %image.addr, align 8]
[apply_hysteresis:nms:non-scalar:  store i8* %nms, i8** %nms.addr, align 8]
[apply_hysteresis:c:scalar:  %llvm-tmp11 = load i32, i32* %c, align 4]
[canny:edge:non-scalar:  store i8** %edge, i8*** %edge.addr, align 8]
[apply_hysteresis:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8]
[apply_hysteresis:pos:scalar:  %llvm-tmp8 = load i32, i32* %pos, align 4]
[apply_hysteresis:r:scalar:  store i32 %inc12, i32* %r, align 4]
[apply_hysteresis:numedges:scalar:  store i32 0, i32* %numedges, align 4]
[apply_hysteresis:maximum_mag:scalar:  store i16 %conv84, i16* %maximum_mag, align 2]
[apply_hysteresis:hist:non-scalar:  %arrayidx44 = getelementptr inbounds [32768 x i32], [32768 x i32]* %hist, i64 0, i64 %idxprom43]
[apply_hysteresis:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[apply_hysteresis:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[derrivative_x_y:c:scalar:  %llvm-tmp35 = load i32, i32* %c, align 4]
[derrivative_x_y:delta_x:non-scalar:  %llvm-tmp32 = load i16**, i16*** %delta_x.addr, align 8]
[follow_edges:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[radian_direction:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8]
[derrivative_x_y:delta_y:non-scalar:  store i16** %delta_y, i16*** %delta_y.addr, align 8]
[derrivative_x_y:smoothedim:non-scalar:  %llvm-tmp29 = load i16*, i16** %smoothedim.addr, align 8]
[derrivative_x_y:pos:scalar:  %llvm-tmp30 = load i32, i32* %pos, align 4]
[write_pgm_image:cols:scalar:  store i32 %cols, i32* %cols.addr, align 4]
[gaussian_smooth:smoothedim:non-scalar:  store i16** %smoothedim, i16*** %smoothedim.addr, align 8]
[canny:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4]
[derrivative_x_y:r:scalar:  %llvm-tmp46 = load i32, i32* %r, align 4]
[derrivative_x_y:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[apply_hysteresis:highthreshold:scalar:  store i32 %llvm-tmp71, i32* %highthreshold, align 4]
[canny:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4]
[magnitude_x_y:magnitude:non-scalar:  store i16** %magnitude, i16*** %magnitude.addr, align 8]
[magnitude_x_y:c:scalar:  %llvm-tmp7 = load i32, i32* %c, align 4]
[magnitude_x_y:pos:scalar:  store i32 0, i32* %pos, align 4]
[canny:rows:scalar:  store i32 %rows, i32* %rows.addr, align 4]
[radian_direction:dir_radians:non-scalar:  store float** %dir_radians, float*** %dir_radians.addr, align 8]
[angle_radians:y:scalar:  store double %y, double* %y.addr, align 8]
[angle_radians:x:scalar:  store double %x, double* %x.addr, align 8]
[radian_direction:pos:scalar:  store i32 0, i32* %pos, align 4]
[radian_direction:r:scalar:  store i32 0, i32* %r, align 4]
[gaussian_smooth:rr:scalar:  %llvm-tmp76 = load i32, i32* %rr, align 4]
[gaussian_smooth:r:scalar:  %llvm-tmp11 = load i32, i32* %r, align 4]
[magnitude_x_y:r:scalar:  %llvm-tmp5 = load i32, i32* %r, align 4]
[gaussian_smooth:tempim:non-scalar:  store float* %llvm-tmp4, float** %tempim, align 8]
[make_gaussian_kernel:sum:scalar:  store float 0.000000e+00, float* %sum, align 4]
[make_gaussian_kernel:fx:scalar:  store float %conv21, float* %fx, align 4]
[make_gaussian_kernel:i:scalar:  %llvm-tmp10 = load i32, i32* %i, align 4]
[gaussian_smooth:cc:scalar:  store i32 %sub, i32* %cc, align 4]
[make_gaussian_kernel:x:scalar:  store float %conv8, float* %x, align 4]
[gaussian_smooth:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:center:scalar:  store i32 %div, i32* %center, align 4]
[make_gaussian_kernel:windowsize:non-scalar:  store i32* %windowsize, i32** %windowsize.addr, align 8]
[make_gaussian_kernel:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4]
[read_pgm_image:buf:non-scalar:  %arraydecay = getelementptr inbounds [71 x i8], [71 x i8]* %buf, i32 0, i32 0]
[read_pgm_image:fp:non-scalar:  store %struct._IO_FILE* %llvm-tmp1, %struct._IO_FILE** %fp, align 8]
[main:tlow:scalar:]
[read_pgm_image:retval:scalar:  store i32 0, i32* %retval, align 4]
[read_pgm_image:cols:non-scalar:  store i32* %cols, i32** %cols.addr, align 8]
[read_pgm_image:image:non-scalar:  store i8** %image, i8*** %image.addr, align 8]
[read_pgm_image:rows:non-scalar:  store i32* %rows, i32** %rows.addr, align 8]
[End DepRoot:main:thigh:NON_INPUT]

