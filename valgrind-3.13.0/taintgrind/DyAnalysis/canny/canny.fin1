[Dependency root]main:sigma:NON_INPUT
[Useful internal data]

[Dependency root]main:sigma:NON_INPUT
[Dependents]
magnitude_x_y:sq2:scalar:  store i32 %mul20, i32* %sq2, align 4
apply_hysteresis:nms:non-scalar:  store i8* %nms, i8** %nms.addr, align 8
derrivative_x_y:delta_x:non-scalar:  %llvm-tmp32 = load i16**, i16*** %delta_x.addr, align 8
derrivative_x_y:delta_y:non-scalar:  store i16** %delta_y, i16*** %delta_y.addr, align 8
gaussian_smooth:tempim:non-scalar:  store float* %llvm-tmp4, float** %tempim, align 8
non_max_supp:magrowptr:non-scalar:  store i16* %add.ptr17, i16** %magrowptr, align 8
make_gaussian_kernel:center:scalar:  store i32 %div, i32* %center, align 4
non_max_supp:m00:scalar:  store i16 %llvm-tmp40, i16* %m00, align 2
radian_direction:dir_radians:non-scalar:  store float** %dir_radians, float*** %dir_radians.addr, align 8
gaussian_smooth:smoothedim:non-scalar:  store i16** %smoothedim, i16*** %smoothedim.addr, align 8
make_gaussian_kernel:kernel:non-scalar:  store float** %kernel, float*** %kernel.addr, align 8
non_max_supp:gyptr:non-scalar:  %llvm-tmp147 = load i16*, i16** %gyptr, align 8
non_max_supp:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8
non_max_supp:gyrowptr:non-scalar:  store i16* %add.ptr23, i16** %gyrowptr, align 8
non_max_supp:gy:scalar:  %llvm-tmp50 = load i16, i16* %gy, align 2
non_max_supp:gx:scalar:  %llvm-tmp51 = load i16, i16* %gx, align 2
gaussian_smooth:dot:scalar:  store float 0.000000e+00, float* %dot, align 4
apply_hysteresis:mag:non-scalar:  store i16* %mag, i16** %mag.addr, align 8
non_max_supp:mag2:scalar:  store float %add86, float* %mag2, align 4
non_max_supp:mag1:scalar:  store float %add144, float* %mag1, align 4
non_max_supp:result:non-scalar:  store i8* %result, i8** %result.addr, align 8
radian_direction:dx:scalar:  %llvm-tmp20 = load double, double* %dx, align 8
radian_direction:dy:scalar:  store double %sub20, double* %dy, align 8
non_max_supp:xperp:scalar:  store float %div, float* %xperp, align 4
angle_radians:y:scalar:  store double %y, double* %y.addr, align 8
angle_radians:x:scalar:  store double %x, double* %x.addr, align 8
make_gaussian_kernel:fx:scalar:  store float %conv21, float* %fx, align 4
gaussian_smooth:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4
non_max_supp:resultptr:non-scalar:  store i8* %add.ptr, i8** %resultptr, align 8
radian_direction:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8
radian_direction:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8
magnitude_x_y:magnitude:non-scalar:  store i16** %magnitude, i16*** %magnitude.addr, align 8
gaussian_smooth:rr:scalar:  %llvm-tmp76 = load i32, i32* %rr, align 4
non_max_supp:resultrowptr:non-scalar:  store i8* %add.ptr4, i8** %resultrowptr, align 8
non_max_supp:grady:non-scalar:  store i16* %grady, i16** %grady.addr, align 8
non_max_supp:gradx:non-scalar:  store i16* %gradx, i16** %gradx.addr, align 8
make_gaussian_kernel:windowsize:non-scalar:  store i32* %windowsize, i32** %windowsize.addr, align 8
follow_edges:edgemapptr:non-scalar:  store i8* %edgemapptr, i8** %edgemapptr.addr, align 8
radian_direction:dirim:non-scalar:  %llvm-tmp4 = load float*, float** %dirim, align 8
canny:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4
make_gaussian_kernel:sum:scalar:  store float 0.000000e+00, float* %sum, align 4
non_max_supp:gxptr:non-scalar:  store i16* %llvm-tmp34, i16** %gxptr, align 8
follow_edges:tempmapptr:non-scalar:  store i8* %add.ptr4, i8** %tempmapptr, align 8
make_gaussian_kernel:x:scalar:  store float %conv8, float* %x, align 4
magnitude_x_y:delta_y:non-scalar:  store i16* %delta_y, i16** %delta_y.addr, align 8
magnitude_x_y:delta_x:non-scalar:  store i16* %delta_x, i16** %delta_x.addr, align 8
main:sigma:scalar:
magnitude_x_y:sq1:scalar:  store i32 %mul13, i32* %sq1, align 4
apply_hysteresis:edge:non-scalar:  %llvm-tmp9 = load i8*, i8** %edge.addr, align 8
non_max_supp:magptr:non-scalar:  store i16* %llvm-tmp33, i16** %magptr, align 8
non_max_supp:yperp:scalar:  store float %div44, float* %yperp, align 4
make_gaussian_kernel:sigma:scalar:  store float %sigma, float* %sigma.addr, align 4
canny:edge:non-scalar:  store i8** %edge, i8*** %edge.addr, align 8
write_pgm_image:image:non-scalar:  store i8* %image, i8** %image.addr, align 8
follow_edges:tempmagptr:non-scalar:  store i16* %add.ptr14, i16** %tempmagptr, align 8
non_max_supp:gxrowptr:non-scalar:  store i16* %add.ptr20, i16** %gxrowptr, align 8
non_max_supp:z1:scalar:  store i16 %llvm-tmp113, i16* %z1, align 2
non_max_supp:z2:scalar:  store i16 %llvm-tmp116, i16* %z2, align 2
gaussian_smooth:center:scalar:  store i32 %div, i32* %center, align 4
follow_edges:edgemagptr:non-scalar:  store i16* %edgemagptr, i16** %edgemagptr.addr, align 8
apply_hysteresis:hist:non-scalar:  %arrayidx44 = getelementptr inbounds [32768 x i32], [32768 x i32]* %hist, i64 0, i64 %idxprom43
gaussian_smooth:cc:scalar:  store i32 %sub, i32* %cc, align 4
gaussian_smooth:sum:scalar:  store float 0.000000e+00, float* %sum, align 4

[Dependency root]main:tlow:NON_INPUT
[Useful internal data]
non_max_supp:gy:scalar:  %llvm-tmp50 = load i16, i16* %gy, align 2
non_max_supp:gx:scalar:  %llvm-tmp51 = load i16, i16* %gx, align 2
magnitude_x_y:magnitude:non-scalar:  store i16** %magnitude, i16*** %magnitude.addr, align 8
non_max_supp:m00:scalar:  store i16 %llvm-tmp40, i16* %m00, align 2
gaussian_smooth:smoothedim:non-scalar:  store i16** %smoothedim, i16*** %smoothedim.addr, align 8
gaussian_smooth:dot:scalar:  store float 0.000000e+00, float* %dot, align 4
non_max_supp:mag2:scalar:  store float %add86, float* %mag2, align 4
non_max_supp:mag1:scalar:  store float %add144, float* %mag1, align 4
magnitude_x_y:sq1:scalar:  store i32 %mul13, i32* %sq1, align 4
magnitude_x_y:sq2:scalar:  store i32 %mul20, i32* %sq2, align 4
radian_direction:dx:scalar:  %llvm-tmp20 = load double, double* %dx, align 8
radian_direction:dy:scalar:  store double %sub20, double* %dy, align 8
non_max_supp:yperp:scalar:  store float %div44, float* %yperp, align 4
derrivative_x_y:delta_x:non-scalar:  %llvm-tmp32 = load i16**, i16*** %delta_x.addr, align 8
derrivative_x_y:delta_y:non-scalar:  store i16** %delta_y, i16*** %delta_y.addr, align 8
gaussian_smooth:tempim:non-scalar:  store float* %llvm-tmp4, float** %tempim, align 8
non_max_supp:xperp:scalar:  store float %div, float* %xperp, align 4
radian_direction:dirim:non-scalar:  %llvm-tmp4 = load float*, float** %dirim, align 8
non_max_supp:z1:scalar:  store i16 %llvm-tmp113, i16* %z1, align 2
non_max_supp:z2:scalar:  store i16 %llvm-tmp116, i16* %z2, align 2
apply_hysteresis:hist:non-scalar:  %arrayidx44 = getelementptr inbounds [32768 x i32], [32768 x i32]* %hist, i64 0, i64 %idxprom43
angle_radians:y:scalar:  store double %y, double* %y.addr, align 8
angle_radians:x:scalar:  store double %x, double* %x.addr, align 8

[Dependency root]main:tlow:NON_INPUT
[Dependents]
follow_edges:lowval:scalar:  store i16 %lowval, i16* %lowval.addr, align 2
canny:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4
apply_hysteresis:tlow:scalar:  store float %tlow, float* %tlow.addr, align 4
apply_hysteresis:lowthreshold:scalar:  store i32 %conv112, i32* %lowthreshold, align 4
main:tlow:scalar:

[Dependency root]main:thigh:NON_INPUT
[Useful internal data]
non_max_supp:gy:scalar:  %llvm-tmp50 = load i16, i16* %gy, align 2
non_max_supp:gx:scalar:  %llvm-tmp51 = load i16, i16* %gx, align 2
magnitude_x_y:magnitude:non-scalar:  store i16** %magnitude, i16*** %magnitude.addr, align 8
non_max_supp:m00:scalar:  store i16 %llvm-tmp40, i16* %m00, align 2
gaussian_smooth:smoothedim:non-scalar:  store i16** %smoothedim, i16*** %smoothedim.addr, align 8
gaussian_smooth:dot:scalar:  store float 0.000000e+00, float* %dot, align 4
non_max_supp:mag2:scalar:  store float %add86, float* %mag2, align 4
non_max_supp:mag1:scalar:  store float %add144, float* %mag1, align 4
magnitude_x_y:sq1:scalar:  store i32 %mul13, i32* %sq1, align 4
magnitude_x_y:sq2:scalar:  store i32 %mul20, i32* %sq2, align 4
radian_direction:dx:scalar:  %llvm-tmp20 = load double, double* %dx, align 8
radian_direction:dy:scalar:  store double %sub20, double* %dy, align 8
non_max_supp:yperp:scalar:  store float %div44, float* %yperp, align 4
derrivative_x_y:delta_x:non-scalar:  %llvm-tmp32 = load i16**, i16*** %delta_x.addr, align 8
derrivative_x_y:delta_y:non-scalar:  store i16** %delta_y, i16*** %delta_y.addr, align 8
gaussian_smooth:tempim:non-scalar:  store float* %llvm-tmp4, float** %tempim, align 8
non_max_supp:xperp:scalar:  store float %div, float* %xperp, align 4
radian_direction:dirim:non-scalar:  %llvm-tmp4 = load float*, float** %dirim, align 8
non_max_supp:z1:scalar:  store i16 %llvm-tmp113, i16* %z1, align 2
non_max_supp:z2:scalar:  store i16 %llvm-tmp116, i16* %z2, align 2
apply_hysteresis:hist:non-scalar:  %arrayidx44 = getelementptr inbounds [32768 x i32], [32768 x i32]* %hist, i64 0, i64 %idxprom43
angle_radians:y:scalar:  store double %y, double* %y.addr, align 8
angle_radians:x:scalar:  store double %x, double* %x.addr, align 8

[Dependency root]main:thigh:NON_INPUT
[Dependents]
canny:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4
apply_hysteresis:highcount:scalar:  store i32 %conv96, i32* %highcount, align 4
main:thigh:scalar:
apply_hysteresis:thigh:scalar:  store float %thigh, float* %thigh.addr, align 4
apply_hysteresis:lowthreshold:scalar:  store i32 %conv112, i32* %lowthreshold, align 4

